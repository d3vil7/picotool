on:
  workflow_dispatch:

jobs:
  build:
    # Prevent running twice for PRs from same repo
    #if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    name: Build & Test
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        generator: ["Ninja"]
        mbedtls: ["mbedtls"]
        libusb: ["libusb"]
        compile: ["compile"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies (Windows)

        run: |
          choco install -y .github/workflows/choco_packages.config
          curl -L https://github.com/libusb/libusb/releases/download/v1.0.27/libusb-1.0.27.7z -o libusb.7z
          7z x libusb.7z -olibusb
      - name: Set LIBUSB_ROOT (Windows)
        shell: bash
        run: echo "LIBUSB_ROOT=$(pwd)/libusb" >> "$GITHUB_ENV"

      - name: Checkout Pico SDK
        uses: actions/checkout@v4
        with:
          repository: raspberrypi/pico-sdk
          ref: develop
          path: pico-sdk
          submodules: ${{ !(!matrix.mbedtls) }}

      - name: Build and Install
        run: |
          cmake -S . -B build -G "Ninja" -D PICO_SDK_PATH="${{ github.workspace }}/pico-sdk" ${{ matrix.compile && '-D USE_PRECOMPILED=false' || '' }}
          cmake --build build
      
      - name: Create release assets
        run: |
          mkdir release
          copy build\picotool.exe release\
          7z a release/picotool.zip release/picotool.exe

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: release/picotool.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
